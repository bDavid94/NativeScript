"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ApplicationSettings = require("application-settings");
var rxjs_1 = require("rxjs");
var ItemService = /** @class */ (function () {
    function ItemService() {
        this.items = new Array({ id: 1, name: "Ter Stegen", role: "Goalkeeper" }, { id: 3, name: "Piqué", role: "Defender" }, { id: 4, name: "I. Rakitic", role: "Midfielder" }, { id: 5, name: "Sergio", role: "Midfielder" }, { id: 6, name: "Denis Suárez", role: "Midfielder" }, { id: 7, name: "Arda", role: "Midfielder" }, { id: 8, name: "A. Iniesta", role: "Midfielder" }, { id: 9, name: "Suárez", role: "Forward" }, { id: 10, name: "Messi", role: "Forward" }, { id: 11, name: "Neymar", role: "Forward" }, { id: 12, name: "Rafinha", role: "Midfielder" }, { id: 13, name: "Cillessen", role: "Goalkeeper" }, { id: 14, name: "Mascherano", role: "Defender" }, { id: 17, name: "Paco Alcácer", role: "Forward" }, { id: 18, name: "Jordi Alba", role: "Defender" }, { id: 19, name: "Digne", role: "Defender" }, { id: 20, name: "Sergi Roberto", role: "Midfielder" }, { id: 21, name: "André Gomes", role: "Midfielder" }, { id: 22, name: "Aleix Vidal", role: "Midfielder" }, { id: 23, name: "Umtiti", role: "Defender" }, { id: 24, name: "Mathieu", role: "Defender" }, { id: 25, name: "Masip", role: "Goalkeeper" });
        ApplicationSettings.setString("items", JSON.stringify(this.items));
    }
    // public items: Array<Item>;
    ItemService.prototype.getItems = function () {
        var _this = this;
        // return this.items;
        return rxjs_1.Observable.create(function (observer) {
            _this.items = JSON.parse(ApplicationSettings.getString('items', '[]'));
            observer.next(_this.items);
            observer.complete();
        });
    };
    ItemService.prototype.getItem = function (id) {
        var _this = this;
        return rxjs_1.Observable.create(function (observer) {
            var it = _this.items.filter(function (item) { return item.id === id; })[0];
            observer.next(it);
            observer.complete();
        });
    };
    ItemService.prototype.save = function (name, role) {
        var id = this.items.map(function (item) { return item.id; }).reverse()[0] + 1;
        console.log("the id is " + id);
        this.items.push({ id: id, name: name, role: role });
        ApplicationSettings.setString("items", JSON.stringify(this.items));
    };
    ItemService.prototype.delete = function (id) {
        this.items = this.items.filter(function (el) { return el.id !== id; });
        ApplicationSettings.setString("items", JSON.stringify(this.items));
    };
    ItemService.prototype.update = function (item) {
        this.items = this.items.map(function (el) {
            if (el.id === item.id) {
                el.role = item.role;
                return el;
            }
            else {
                return el;
            }
        });
        ApplicationSettings.setString("items", JSON.stringify(this.items));
    };
    ItemService = __decorate([
        core_1.Injectable({
            providedIn: "root"
        }),
        __metadata("design:paramtypes", [])
    ], ItemService);
    return ItemService;
}());
exports.ItemService = ItemService;
//# sourceMappingURL=data:application/json;base64,